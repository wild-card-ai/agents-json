openapi: 3.0.0
servers:
- url: https://www.googleapis.com/calendar/v3
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Calendar API allows you to manage your Google Calendar account,
    including creating, updating, and deleting events, managing calendars, and accessing
    scheduling data.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Calendar API
  version: v3
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
  - analytics
  - media
  x-logo:
    url: 
      https://api.apis.guru/v2/cache/logo/https_www.google.com_images_branding_googlelogo_2x_googlelogo_color_272x92dp.png
  x-origin:
  - format: google
    url: https://calendar-json.googleapis.com/$discovery/rest?version=v3
    version: v1
  x-providerName: googleapis.com
  x-serviceName: calendar
  summary: Create, edit, and retrieve events, manage reminders, and access scheduling
    data.
  x-api-uuid: f2c5997b-44ea-4a0b-a80f-16e0dc954766
externalDocs:
  url: https://developers.google.com/google-apps/calendar/firstapp
tags:
- name: acl
- name: calendarList
- name: calendars
- name: channels
- name: colors
- name: events
- name: freebusy
- name: settings
paths:
  /calendars:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: This allows you to create a new secondary calendar within your
        Google Calendar account. Secondary calendars are additional calendars that
        you can manage separately from your primary calendar, useful for organizing
        different types of events or schedules.
      operationId: google_calendar_calendars_insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendars
      summary: Create a secondary calendar
      x-uuid: 23c64fc1-661e-4c7b-a3aa-497f030ee364
  /calendars/{calendarId}:
    delete:
      description: This endpoint deletes a specified secondary calendar from your
        Google Calendar account. Note that this action is irreversible and will remove
        the calendar entirely. For primary calendars, use the 'calendars.clear' endpoint
        to remove all events without deleting the calendar itself.
      operationId: google_calendar_calendars_delete
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendars
      summary: Delete a secondary calendar
      x-uuid: 59bf3965-9aa5-4869-bac6-cd4dc452ced6
    get:
      description: Retrieve detailed metadata for a specified calendar. This includes
        information such as the calendar's name, description, time zone, and other
        settings. Useful for understanding the properties and configurations of a
        calendar.
      operationId: google_calendar_calendars_get
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - calendars
      summary: Get calendar metadata
      x-uuid: 91531429-afc8-476e-a40d-8a78c084a4f2
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    patch:
      description: Update specific metadata fields for a calendar using patch semantics,
        which allows partial updates. This is useful for making small changes to a
        calendar's settings without needing to send the entire calendar object.
      operationId: google_calendar_calendars_patch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendars
      summary: Partially update calendar metadata
      x-uuid: 5feaf5d5-7948-4c33-b0b9-9b8ff24763ba
    put:
      description: Completely update the metadata for a specified calendar. This operation
        replaces the existing calendar metadata with the new data provided, allowing
        for comprehensive updates to calendar settings.
      operationId: google_calendar_calendars_update
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Calendar'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Calendar'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendars
      summary: Update calendar metadata
      x-uuid: d13695fa-16ac-4cba-9b52-8082d8fe53ff
  /calendars/{calendarId}/acl:
    get:
      description: Retrieve the access control list (ACL) rules for a specified calendar.
        ACL rules define the permissions and access levels for different users or
        groups, allowing you to manage who can view or edit the calendar.
      operationId: google_calendar_acl_list
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Whether to include deleted ACLs in the result. Deleted ACLs are
          represented by role equal to "none". Deleted ACLs will always be included
          if syncToken is provided. Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          All entries deleted since the previous list request will always be in the
          result set and it is not allowed to set showDeleted to False.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Acl'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Get calendar ACL rules
      x-uuid: 2a1edd60-382b-427c-bcb1-a6a9e63cf77a
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Create a new access control rule for a specified calendar. This
        allows you to define or modify who can access the calendar and what level
        of permissions they have, such as viewing or editing events.
      operationId: google_calendar_acl_insert
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Whether to send notifications about the calendar sharing change.
          Optional. The default is True.
        in: query
        name: sendNotifications
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Create calendar ACL rule
      x-uuid: b5cbd079-c54e-4ca7-a811-d5e552c9f6b3
  /calendars/{calendarId}/acl/watch:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Set up a watch on the access control list (ACL) resources for a
        calendar. This allows you to receive notifications when there are changes
        to the ACL, helping you stay updated on who has access to your calendar.
      operationId: google_calendar_acl_watch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Whether to include deleted ACLs in the result. Deleted ACLs are
          represented by role equal to "none". Deleted ACLs will always be included
          if syncToken is provided. Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          All entries deleted since the previous list request will always be in the
          result set and it is not allowed to set showDeleted to False.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Watch calendar ACL changes
      x-uuid: 0e9ec2d4-29bd-44e6-a3ae-8d136ced15cf
  /calendars/{calendarId}/acl/{ruleId}:
    delete:
      description: Delete a specific access control rule from a calendar. This action
        removes the specified permissions for a user or group, effectively changing
        who can access or modify the calendar.
      operationId: google_calendar_acl_delete
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: ACL rule identifier.
        in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Delete calendar ACL rule
      x-uuid: 40b0718d-16f3-41b7-8b3f-fb03d0604a48
    get:
      description: Retrieve a specific access control rule for a calendar. This provides
        details about the permissions granted to a user or group, helping you understand
        the current access settings.
      operationId: google_calendar_acl_get
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: ACL rule identifier.
        in: path
        name: ruleId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - acl
      summary: Get specific ACL rule
      x-uuid: 167f359f-1646-4fe3-b07f-80bc0364ee8a
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    patch:
      description: Update a specific access control rule using patch semantics, allowing
        for partial updates. This is useful for modifying certain permissions without
        altering the entire rule.
      operationId: google_calendar_acl_patch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: ACL rule identifier.
        in: path
        name: ruleId
        required: true
        schema:
          type: string
      - description: Whether to send notifications about the calendar sharing change.
          Note that there are no notifications on access removal. Optional. The default
          is True.
        in: query
        name: sendNotifications
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Partially update ACL rule
      x-uuid: 8a8fdeaa-c381-4975-b069-7309302a8c31
    put:
      description: Completely update a specific access control rule for a calendar.
        This operation replaces the existing rule with new permissions, allowing for
        comprehensive changes to access settings.
      operationId: google_calendar_acl_update
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: ACL rule identifier.
        in: path
        name: ruleId
        required: true
        schema:
          type: string
      - description: Whether to send notifications about the calendar sharing change.
          Note that there are no notifications on access removal. Optional. The default
          is True.
        in: query
        name: sendNotifications
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AclRule'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AclRule'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - acl
      summary: Update specific ACL rule
      x-uuid: 6d2b9818-e7f1-4b2a-b9c0-cec7dd0227fb
  /calendars/{calendarId}/clear:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Clear all events from a primary calendar. This operation deletes
        every event associated with the primary calendar of an account, effectively
        resetting the calendar while keeping it intact.
      operationId: google_calendar_calendars_clear
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendars
      summary: Clear primary calendar events
      x-uuid: 233568f0-594b-4a34-bf7d-ce01d3fb546c
  /calendars/{calendarId}/events:
    get:
      description: Retrieve a list of events from a specified calendar. This includes
        all scheduled events, allowing you to view and manage your calendar's activities.
      operationId: google_calendar_events_list
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: "Event types to return. Optional. Possible values are: \n- \"\
          default\" \n- \"focusTime\" \n- \"outOfOffice\"This parameter can be repeated
          multiple times to return events of different types. Currently, this is the
          only allowed value for this field: \n- [\"default\", \"focusTime\", \"outOfOffice\"\
          ] This value will be the default.\n\nIf you're enrolled in the Working Location
          developer preview program, in addition to the default value above you can
          also set the \"workingLocation\" event type: \n- [\"default\", \"focusTime\"\
          , \"outOfOffice\", \"workingLocation\" ] \n- [\"workingLocation\"] Additional
          combinations of these 4 event types will be made available in later releases.
          Developer Preview."
        explode: true
        in: query
        name: eventTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies an event ID in the iCalendar format to be provided
          in the response. Optional. Use this if you want to search for an event by
          its iCalendar ID.
        in: query
        name: iCalUID
        schema:
          type: string
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: Maximum number of events returned on one result page. The number
          of events in the resulting page may be less than this value, or none at
          all, even if there are more events matching the query. Incomplete pages
          can be detected by a non-empty nextPageToken field in the response. By default
          the value is 250 events. The page size can never be larger than 2500 events.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: The order of the events returned in the result. Optional. The
          default is an unspecified, stable order.
        in: query
        name: orderBy
        schema:
          enum:
          - startTime
          - updated
          type: string
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Extended properties constraint specified as propertyName=value.
          Matches only private properties. This parameter might be repeated multiple
          times to return events that match all given constraints.
        explode: true
        in: query
        name: privateExtendedProperty
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Free text search terms to find events that match these terms
          in the following fields: summary, description, location, attendee''s displayName,
          attendee''s email. Optional.'
        in: query
        name: q
        schema:
          type: string
      - description: Extended properties constraint specified as propertyName=value.
          Matches only shared properties. This parameter might be repeated multiple
          times to return events that match all given constraints.
        explode: true
        in: query
        name: sharedExtendedProperty
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to include deleted events (with status equals "cancelled")
          in the result. Cancelled instances of recurring events (but not the underlying
          recurring event) will still be included if showDeleted and singleEvents
          are both False. If showDeleted and singleEvents are both True, only single
          instances of deleted events (but not the underlying recurring events) are
          returned. Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: Whether to include hidden invitations in the result. Optional.
          The default is False.
        in: query
        name: showHiddenInvitations
        schema:
          type: boolean
      - description: Whether to expand recurring events into instances and only return
          single one-off events and instances of recurring events, but not the underlying
          recurring events themselves. Optional. The default is False.
        in: query
        name: singleEvents
        schema:
          type: boolean
      - description: "Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          All events deleted since the previous list request will always be in the
          result set and it is not allowed to set showDeleted to False.\nThere are
          several query parameters that cannot be specified together with nextSyncToken
          to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n
          - orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n
          - timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server
          will respond with a 410 GONE response code and the client should clear its
          storage and perform a full synchronization without any syncToken.\n Learn
          more about incremental synchronization.\nOptional. The default is to return
          all entries."
        in: query
        name: syncToken
        schema:
          type: string
      - description: Upper bound (exclusive) for an event's start time to filter by.
          Optional. The default is not to filter by start time. Must be an RFC3339
          timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,
          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin
          is set, timeMax must be greater than timeMin.
        in: query
        name: timeMax
        schema:
          type: string
      - description: Lower bound (exclusive) for an event's end time to filter by.
          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp
          with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,
          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax
          is set, timeMin must be smaller than timeMax.
        in: query
        name: timeMin
        schema:
          type: string
      - description: Time zone used in the response. Optional. The default is the
          time zone of the calendar.
        in: query
        name: timeZone
        schema:
          type: string
      - description: Lower bound for an event's last modification time (as a RFC3339
          timestamp) to filter by. When specified, entries deleted since this time
          will always be included regardless of showDeleted. Optional. The default
          is not to filter by last modification time.
        in: query
        name: updatedMin
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - events
      summary: List calendar events
      x-uuid: 332a9eec-7dea-47eb-8ffa-38754b7b4b04
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Create a new event in a specified calendar. This allows you to
        schedule activities, appointments, or reminders directly within your calendar.
      operationId: google_calendar_events_insert
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0.
        in: query
        name: conferenceDataVersion
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the creation of the new event. Note
          that some emails might still be sent even if you set the value to false.
          The default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Whether to send notifications about the creation of the new event.
          Note that some emails might still be sent. The default is false.
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      - description: Whether API client performing operation supports event attachments.
          Optional. The default is False.
        in: query
        name: supportsAttachments
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Create a calendar event
      x-uuid: 2d28468d-5853-48f2-a8eb-d9b0d60af818
  /calendars/{calendarId}/events/import:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Import an existing event into a calendar, creating a private copy.
        This is useful for adding events from external sources or other calendars
        without sharing them publicly.
      operationId: google_calendar_events_import
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0.
        in: query
        name: conferenceDataVersion
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - description: Whether API client performing operation supports event attachments.
          Optional. The default is False.
        in: query
        name: supportsAttachments
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Import an event to calendar
      x-uuid: 5ca1716b-34ca-4215-a945-632a4964fb16
  /calendars/{calendarId}/events/quickAdd:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Quickly create an event using a simple text string. This feature
        allows you to add events by typing natural language descriptions, making scheduling
        fast and intuitive.
      operationId: google_calendar_events_quick_add
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: The text describing the event to be created.
        in: query
        name: text
        required: true
        schema:
          type: string
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the creation of the event. Note that
          some emails might still be sent even if you set the value to false. The
          default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Guests who should receive notifications about the creation of
          the new event.
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Quickly add an event
      x-uuid: d32fcc93-d457-4820-be8e-f96551da8074
  /calendars/{calendarId}/events/watch:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Set up a watch on events resources for a calendar. This allows
        you to receive notifications when there are changes to events, keeping you
        informed about updates or modifications.
      operationId: google_calendar_events_watch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: "Event types to return. Optional. Possible values are: \n- \"\
          default\" \n- \"focusTime\" \n- \"outOfOffice\"This parameter can be repeated
          multiple times to return events of different types. Currently, this is the
          only allowed value for this field: \n- [\"default\", \"focusTime\", \"outOfOffice\"\
          ] This value will be the default.\n\nIf you're enrolled in the Working Location
          developer preview program, in addition to the default value above you can
          also set the \"workingLocation\" event type: \n- [\"default\", \"focusTime\"\
          , \"outOfOffice\", \"workingLocation\" ] \n- [\"workingLocation\"] Additional
          combinations of these 4 event types will be made available in later releases.
          Developer Preview."
        explode: true
        in: query
        name: eventTypes
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Specifies an event ID in the iCalendar format to be provided
          in the response. Optional. Use this if you want to search for an event by
          its iCalendar ID.
        in: query
        name: iCalUID
        schema:
          type: string
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: Maximum number of events returned on one result page. The number
          of events in the resulting page may be less than this value, or none at
          all, even if there are more events matching the query. Incomplete pages
          can be detected by a non-empty nextPageToken field in the response. By default
          the value is 250 events. The page size can never be larger than 2500 events.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: The order of the events returned in the result. Optional. The
          default is an unspecified, stable order.
        in: query
        name: orderBy
        schema:
          enum:
          - startTime
          - updated
          type: string
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Extended properties constraint specified as propertyName=value.
          Matches only private properties. This parameter might be repeated multiple
          times to return events that match all given constraints.
        explode: true
        in: query
        name: privateExtendedProperty
        schema:
          items:
            type: string
          type: array
        style: form
      - description: 'Free text search terms to find events that match these terms
          in the following fields: summary, description, location, attendee''s displayName,
          attendee''s email. Optional.'
        in: query
        name: q
        schema:
          type: string
      - description: Extended properties constraint specified as propertyName=value.
          Matches only shared properties. This parameter might be repeated multiple
          times to return events that match all given constraints.
        explode: true
        in: query
        name: sharedExtendedProperty
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Whether to include deleted events (with status equals "cancelled")
          in the result. Cancelled instances of recurring events (but not the underlying
          recurring event) will still be included if showDeleted and singleEvents
          are both False. If showDeleted and singleEvents are both True, only single
          instances of deleted events (but not the underlying recurring events) are
          returned. Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: Whether to include hidden invitations in the result. Optional.
          The default is False.
        in: query
        name: showHiddenInvitations
        schema:
          type: boolean
      - description: Whether to expand recurring events into instances and only return
          single one-off events and instances of recurring events, but not the underlying
          recurring events themselves. Optional. The default is False.
        in: query
        name: singleEvents
        schema:
          type: boolean
      - description: "Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          All events deleted since the previous list request will always be in the
          result set and it is not allowed to set showDeleted to False.\nThere are
          several query parameters that cannot be specified together with nextSyncToken
          to ensure consistency of the client state.\n\nThese are: \n- iCalUID \n
          - orderBy \n- privateExtendedProperty \n- q \n- sharedExtendedProperty \n
          - timeMin \n- timeMax \n- updatedMin If the syncToken expires, the server
          will respond with a 410 GONE response code and the client should clear its
          storage and perform a full synchronization without any syncToken.\n Learn
          more about incremental synchronization.\nOptional. The default is to return
          all entries."
        in: query
        name: syncToken
        schema:
          type: string
      - description: Upper bound (exclusive) for an event's start time to filter by.
          Optional. The default is not to filter by start time. Must be an RFC3339
          timestamp with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,
          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMin
          is set, timeMax must be greater than timeMin.
        in: query
        name: timeMax
        schema:
          type: string
      - description: Lower bound (exclusive) for an event's end time to filter by.
          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp
          with mandatory time zone offset, for example, 2011-06-03T10:00:00-07:00,
          2011-06-03T10:00:00Z. Milliseconds may be provided but are ignored. If timeMax
          is set, timeMin must be smaller than timeMax.
        in: query
        name: timeMin
        schema:
          type: string
      - description: Time zone used in the response. Optional. The default is the
          time zone of the calendar.
        in: query
        name: timeZone
        schema:
          type: string
      - description: Lower bound for an event's last modification time (as a RFC3339
          timestamp) to filter by. When specified, entries deleted since this time
          will always be included regardless of showDeleted. Optional. The default
          is not to filter by last modification time.
        in: query
        name: updatedMin
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - events
      summary: Watch for event changes
      x-uuid: 63164df3-730d-4f29-9f50-4847cf825bb1
  /calendars/{calendarId}/events/{eventId}:
    delete:
      description: Delete a specific event from a calendar. This action removes the
        event entirely, freeing up the scheduled time and removing it from your calendar
        view.
      operationId: google_calendar_events_delete
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the deletion of the event. Note that
          some emails might still be sent even if you set the value to false. The
          default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Guests who should receive notifications about the deletion of
          the event.
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Delete a calendar event
      x-uuid: 52f1cc5b-9971-4e3d-af13-2cd03a3a9c4c
    get:
      description: Retrieve details of a specific event using its Google Calendar
        ID. For events identified by iCalendar ID, use the 'events.list' method with
        the iCalUID parameter.
      operationId: google_calendar_events_get
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: Time zone used in the response. Optional. The default is the
          time zone of the calendar.
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - events
      summary: Get event details by ID
      x-uuid: d4218736-bb85-4a37-b68c-5749d6d904a5
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    patch:
      description: Update specific fields of an event using patch semantics, allowing
        for partial modifications. This is useful for making small changes to an event
        without altering the entire event object.
      operationId: google_calendar_events_patch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0.
        in: query
        name: conferenceDataVersion
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the event update (for example, description
          changes, etc.). Note that some emails might still be sent even if you set
          the value to false. The default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Guests who should receive notifications about the event update
          (for example, title changes, etc.).
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      - description: Whether API client performing operation supports event attachments.
          Optional. The default is False.
        in: query
        name: supportsAttachments
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Partially update an event
      x-uuid: aec1922b-f891-4a78-b8be-c6fc18984408
    put:
      description: Completely update an event's details. This operation replaces the
        existing event data with new information, allowing for comprehensive changes
        to the event.
      operationId: google_calendar_events_update
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: Version number of conference data supported by the API client.
          Version 0 assumes no conference data support and ignores conference data
          in the event's body. Version 1 enables support for copying of ConferenceData
          as well as for creating new conferences using the createRequest field of
          conferenceData. The default is 0.
        in: query
        name: conferenceDataVersion
        schema:
          maximum: 1
          minimum: 0
          type: integer
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the event update (for example, description
          changes, etc.). Note that some emails might still be sent even if you set
          the value to false. The default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Guests who should receive notifications about the event update
          (for example, title changes, etc.).
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      - description: Whether API client performing operation supports event attachments.
          Optional. The default is False.
        in: query
        name: supportsAttachments
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Update event details
      x-uuid: 027e555c-fdcf-439a-992a-bdd710fb55fb
  /calendars/{calendarId}/events/{eventId}/instances:
    get:
      description: Retrieve all instances of a specified recurring event. This is
        useful for viewing each occurrence of a repeating event, such as weekly meetings
        or monthly reminders.
      operationId: google_calendar_events_instances
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Recurring event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: Deprecated and ignored. A value will always be returned in the
          email field for the organizer, creator and attendees, even if no real email
          address is available (i.e. a generated, non-working value will be provided).
        in: query
        name: alwaysIncludeEmail
        schema:
          type: boolean
      - description: The maximum number of attendees to include in the response. If
          there are more than the specified number of attendees, only the participant
          is returned. Optional.
        in: query
        name: maxAttendees
        schema:
          minimum: 1
          type: integer
      - description: Maximum number of events returned on one result page. By default
          the value is 250 events. The page size can never be larger than 2500 events.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: The original start time of the instance in the result. Optional.
        in: query
        name: originalStart
        schema:
          type: string
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Whether to include deleted events (with status equals "cancelled")
          in the result. Cancelled instances of recurring events will still be included
          if singleEvents is False. Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: Upper bound (exclusive) for an event's start time to filter by.
          Optional. The default is not to filter by start time. Must be an RFC3339
          timestamp with mandatory time zone offset.
        in: query
        name: timeMax
        schema:
          type: string
      - description: Lower bound (inclusive) for an event's end time to filter by.
          Optional. The default is not to filter by end time. Must be an RFC3339 timestamp
          with mandatory time zone offset.
        in: query
        name: timeMin
        schema:
          type: string
      - description: Time zone used in the response. Optional. The default is the
          time zone of the calendar.
        in: query
        name: timeZone
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Events'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - events
      summary: Get recurring event instances
      x-uuid: 3458b88a-80ec-464b-bb35-c270c2e8000c
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
  /calendars/{calendarId}/events/{eventId}/move:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Move an event to another calendar, effectively changing its organizer.
        This is useful for transferring event ownership or reorganizing events across
        different calendars.
      operationId: google_calendar_events_move
      parameters:
      - description: Calendar identifier of the source calendar where the event currently
          is on.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Event identifier.
        in: path
        name: eventId
        required: true
        schema:
          type: string
      - description: Calendar identifier of the target calendar where the event is
          to be moved to.
        in: query
        name: destination
        required: true
        schema:
          type: string
      - description: 'Deprecated. Please use sendUpdates instead.


          Whether to send notifications about the change of the event''s organizer.
          Note that some emails might still be sent even if you set the value to false.
          The default is false.'
        in: query
        name: sendNotifications
        schema:
          type: boolean
      - description: Guests who should receive notifications about the change of the
          event's organizer.
        in: query
        name: sendUpdates
        schema:
          enum:
          - all
          - externalOnly
          - none
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      tags:
      - events
      summary: Move event to another calendar
      x-uuid: a028dec8-bd26-4b13-86ee-9e9c6b655d5d
  /channels/stop:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Stop watching resources through a specified channel. This action
        halts notifications for changes, allowing you to manage which updates you
        receive.
      operationId: google_calendar_channels_stop
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.events.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.events.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.settings.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.settings.readonly
      tags:
      - channels
      summary: Stop watching resources
      x-uuid: 0e41881b-d4ac-4d3b-8b9b-12f83ee80f4f
  /colors:
    get:
      description: Retrieve the color definitions available for calendars and events.
        These colors help visually differentiate between different calendars and event
        types.
      operationId: google_calendar_colors_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Colors'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - colors
      summary: Get calendar and event colors
      x-uuid: e265889e-900d-46b3-88b8-2833b5df8ef3
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
  /freeBusy:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Retrieve free/busy information for a set of calendars. This is
        useful for scheduling meetings or events by checking when participants are
        available.
      operationId: google_calendar_freebusy_query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FreeBusyRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FreeBusyResponse'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - freebusy
      summary: Get free/busy information
      x-uuid: a100cbeb-b44e-4317-8469-64b5e1d6c232
  /users/me/calendarList:
    get:
      description: Retrieve the list of calendars associated with the user's account.
        This includes all calendars the user has access to, allowing for easy management
        and navigation.
      operationId: google_calendar_calendar_list_list
      parameters:
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: The minimum access role for the user in the returned entries.
          Optional. The default is no restriction.
        in: query
        name: minAccessRole
        schema:
          enum:
          - freeBusyReader
          - owner
          - reader
          - writer
          type: string
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Whether to include deleted calendar list entries in the result.
          Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: Whether to show hidden entries. Optional. The default is False.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          If only read-only fields such as calendar properties or ACLs have changed,
          the entry won''t be returned. All entries deleted and hidden since the previous
          list request will always be in the result set and it is not allowed to set
          showDeleted neither showHidden to False.

          To ensure client state consistency minAccessRole query parameter cannot
          be specified together with nextSyncToken.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarList'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - calendarList
      summary: List user's calendars
      x-uuid: 4dc25cdd-9345-4d14-81fa-2975aa46a718
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Add an existing calendar to the user's calendar list. This allows
        the user to manage and view additional calendars within their account.
      operationId: google_calendar_calendar_list_insert
      parameters:
      - description: Whether to use the foregroundColor and backgroundColor fields
          to write the calendar colors (RGB). If this feature is used, the index-based
          colorId field will be set to the best matching option automatically. Optional.
          The default is False.
        in: query
        name: colorRgbFormat
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendarList
      summary: Add calendar to user's list
      x-uuid: e55d6679-ff3c-4e1d-b4e1-9d0efb79326a
  /users/me/calendarList/watch:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: Set up a watch on the user's calendar list resources. This allows
        you to receive notifications when there are changes to the list, such as new
        calendars being added or removed.
      operationId: google_calendar_calendar_list_watch
      parameters:
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: The minimum access role for the user in the returned entries.
          Optional. The default is no restriction.
        in: query
        name: minAccessRole
        schema:
          enum:
          - freeBusyReader
          - owner
          - reader
          - writer
          type: string
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: Whether to include deleted calendar list entries in the result.
          Optional. The default is False.
        in: query
        name: showDeleted
        schema:
          type: boolean
      - description: Whether to show hidden entries. Optional. The default is False.
        in: query
        name: showHidden
        schema:
          type: boolean
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.
          If only read-only fields such as calendar properties or ACLs have changed,
          the entry won''t be returned. All entries deleted and hidden since the previous
          list request will always be in the result set and it is not allowed to set
          showDeleted neither showHidden to False.

          To ensure client state consistency minAccessRole query parameter cannot
          be specified together with nextSyncToken.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - calendarList
      summary: Watch calendar list changes
      x-uuid: 86263c65-2334-4575-a86f-f71774f36fb9
  /users/me/calendarList/{calendarId}:
    delete:
      description: This endpoint removes a specific calendar from the user's list
        of calendars. It is useful for managing which calendars are visible or accessible
        in the user's calendar interface.
      operationId: google_calendar_calendar_list_delete
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendarList
      summary: Remove a calendar from list
      x-uuid: 4ad3e931-68f9-439b-88d4-f702425296cb
    get:
      description: This endpoint retrieves details of a specific calendar from the
        user's list of calendars. It allows users to view information about a particular
        calendar they have access to.
      operationId: google_calendar_calendar_list_get
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      tags:
      - calendarList
      summary: Get calendar details
      x-uuid: 02aeeafd-fbcb-4552-9adf-4c5e1d2698dd
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    patch:
      description: This endpoint updates certain fields of an existing calendar in
        the user's list using patch semantics, which means only the specified fields
        will be updated. It is useful for making partial updates without affecting
        other calendar data.
      operationId: google_calendar_calendar_list_patch
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Whether to use the foregroundColor and backgroundColor fields
          to write the calendar colors (RGB). If this feature is used, the index-based
          colorId field will be set to the best matching option automatically. Optional.
          The default is False.
        in: query
        name: colorRgbFormat
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendarList
      summary: Partially update calendar
      x-uuid: 649bc943-1ade-4256-afdd-05c5b3a65d0b
    put:
      description: This endpoint updates an existing calendar in the user's list by
        replacing it with a new version. It is used when a complete update of the
        calendar's information is needed.
      operationId: google_calendar_calendar_list_update
      parameters:
      - description: Calendar identifier. To retrieve calendar IDs call the calendarList.list
          method. If you want to access the primary calendar of the currently logged
          in user, use the "primary" keyword.
        in: path
        name: calendarId
        required: true
        schema:
          type: string
      - description: Whether to use the foregroundColor and backgroundColor fields
          to write the calendar colors (RGB). If this feature is used, the index-based
          colorId field will be set to the best matching option automatically. Optional.
          The default is False.
        in: query
        name: colorRgbFormat
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalendarListEntry'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalendarListEntry'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      tags:
      - calendarList
      summary: Update calendar completely
      x-uuid: 643e2ba0-7bfe-4ce2-9a7b-c52d458625a4
  /users/me/settings:
    get:
      description: This endpoint retrieves all settings for the authenticated user.
        It provides access to user-specific configurations and preferences within
        the calendar application.
      operationId: google_calendar_settings_list
      parameters:
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Settings'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.settings.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.settings.readonly
      tags:
      - settings
      summary: Retrieve all user settings
      x-uuid: 79936e55-8ae8-402f-a486-675607fab809
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
  /users/me/settings/watch:
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
    post:
      description: This endpoint allows users to watch for changes to their settings
        resources. It is useful for applications that need to respond to updates in
        user settings in real-time.
      operationId: google_calendar_settings_watch
      parameters:
      - description: Maximum number of entries returned on one result page. By default
          the value is 100 entries. The page size can never be larger than 250 entries.
          Optional.
        in: query
        name: maxResults
        schema:
          minimum: 1
          type: integer
      - description: Token specifying which result page to return. Optional.
        in: query
        name: pageToken
        schema:
          type: string
      - description: 'Token obtained from the nextSyncToken field returned on the
          last page of results from the previous list request. It makes the result
          of this list request contain only entries that have changed since then.

          If the syncToken expires, the server will respond with a 410 GONE response
          code and the client should clear its storage and perform a full synchronization
          without any syncToken.

          Learn more about incremental synchronization.

          Optional. The default is to return all entries.'
        in: query
        name: syncToken
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.settings.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.settings.readonly
      tags:
      - settings
      summary: Monitor settings changes
      x-uuid: 23808f3d-3364-47b5-bb7c-6b47cf6bb53d
  /users/me/settings/{setting}:
    get:
      description: This endpoint retrieves a specific user setting. It is useful for
        accessing individual configuration options or preferences set by the user.
      operationId: google_calendar_settings_get
      parameters:
      - description: The id of the user setting.
        in: path
        name: setting
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
          description: Successful response
      security:
      - Oauth2:
        - https://www.googleapis.com/auth/calendar
        Oauth2c:
        - https://www.googleapis.com/auth/calendar
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.readonly
      - Oauth2:
        - https://www.googleapis.com/auth/calendar.settings.readonly
        Oauth2c:
        - https://www.googleapis.com/auth/calendar.settings.readonly
      tags:
      - settings
      summary: Get specific user setting
      x-uuid: 52bdc86f-f7be-4a4b-ad51-7e6a90a46511
    parameters:
    - $ref: '#/components/parameters/alt'
    - $ref: '#/components/parameters/fields'
    - $ref: '#/components/parameters/key'
    - $ref: '#/components/parameters/oauth_token'
    - $ref: '#/components/parameters/prettyPrint'
    - $ref: '#/components/parameters/quotaUser'
    - $ref: '#/components/parameters/userIp'
components:
  parameters:
    alt:
      description: Data format for the response.
      in: query
      name: alt
      schema:
        enum:
        - json
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you
        with API access, quota, and reports. Required unless you provide an OAuth
        2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: An opaque string that represents a user for quota purposes. Must
        not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    userIp:
      description: Deprecated. Please use quotaUser instead.
      in: query
      name: userIp
      schema:
        type: string
  schemas:
    Acl:
      properties:
        etag:
          description: ETag of the collection.
          type: string
        items:
          description: List of rules on the access control list.
          items:
            $ref: '#/components/schemas/AclRule'
          type: array
        kind:
          default: calendar#acl
          description: Type of the collection ("calendar#acl").
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. Omitted
            if no further results are available, in which case nextSyncToken is provided.
          type: string
        nextSyncToken:
          description: Token used at a later point in time to retrieve only the entries
            that have changed since this result was returned. Omitted if further results
            are available, in which case nextPageToken is provided.
          type: string
      type: object
    AclRule:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: Identifier of the Access Control List (ACL) rule. See Sharing
            calendars.
          type: string
        kind:
          default: calendar#aclRule
          description: Type of the resource ("calendar#aclRule").
          type: string
        role:
          description: "The role assigned to the scope. Possible values are:  \n-
            \"none\" - Provides no access. \n- \"freeBusyReader\" - Provides read
            access to free/busy information. \n- \"reader\" - Provides read access
            to the calendar. Private events will appear to users with reader access,
            but event details will be hidden. \n- \"writer\" - Provides read and write
            access to the calendar. Private events will appear to users with writer
            access, and event details will be visible. \n- \"owner\" - Provides ownership
            of the calendar. This role has all of the permissions of the writer role
            with the additional ability to see and manipulate ACLs."
          type: string
        scope:
          description: The extent to which calendar access is granted by this ACL
            rule.
          properties:
            type:
              description: "The type of the scope. Possible values are:  \n- \"default\"\
                \ - The public scope. This is the default value. \n- \"user\" - Limits
                the scope to a single user. \n- \"group\" - Limits the scope to a
                group. \n- \"domain\" - Limits the scope to a domain.  Note: The permissions
                granted to the \"default\", or public, scope apply to any user, authenticated
                or not."
              type: string
            value:
              description: The email address of a user or group, or the name of a
                domain, depending on the scope type. Omitted for type "default".
              type: string
          type: object
      type: object
    Calendar:
      properties:
        conferenceProperties:
          $ref: '#/components/schemas/ConferenceProperties'
          description: Conferencing properties for this calendar, for example what
            types of conferences are allowed.
        description:
          description: Description of the calendar. Optional.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: Identifier of the calendar. To retrieve IDs call the calendarList.list()
            method.
          type: string
        kind:
          default: calendar#calendar
          description: Type of the resource ("calendar#calendar").
          type: string
        location:
          description: Geographic location of the calendar as free-form text. Optional.
          type: string
        summary:
          description: Title of the calendar.
          type: string
        timeZone:
          description: The time zone of the calendar. (Formatted as an IANA Time Zone
            Database name, e.g. "Europe/Zurich".) Optional.
          type: string
      type: object
    CalendarList:
      properties:
        etag:
          description: ETag of the collection.
          type: string
        items:
          description: Calendars that are present on the user's calendar list.
          items:
            $ref: '#/components/schemas/CalendarListEntry'
          type: array
        kind:
          default: calendar#calendarList
          description: Type of the collection ("calendar#calendarList").
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. Omitted
            if no further results are available, in which case nextSyncToken is provided.
          type: string
        nextSyncToken:
          description: Token used at a later point in time to retrieve only the entries
            that have changed since this result was returned. Omitted if further results
            are available, in which case nextPageToken is provided.
          type: string
      type: object
    CalendarListEntry:
      properties:
        accessRole:
          description: "The effective access role that the authenticated user has
            on the calendar. Read-only. Possible values are:  \n- \"freeBusyReader\"\
            \ - Provides read access to free/busy information. \n- \"reader\" - Provides
            read access to the calendar. Private events will appear to users with
            reader access, but event details will be hidden. \n- \"writer\" - Provides
            read and write access to the calendar. Private events will appear to users
            with writer access, and event details will be visible. \n- \"owner\" -
            Provides ownership of the calendar. This role has all of the permissions
            of the writer role with the additional ability to see and manipulate ACLs."
          type: string
        backgroundColor:
          description: The main color of the calendar in the hexadecimal format "#0088aa".
            This property supersedes the index-based colorId property. To set or change
            this property, you need to specify colorRgbFormat=true in the parameters
            of the insert, update and patch methods. Optional.
          type: string
        colorId:
          description: The color of the calendar. This is an ID referring to an entry
            in the calendar section of the colors definition (see the colors endpoint).
            This property is superseded by the backgroundColor and foregroundColor
            properties and can be ignored when using these properties. Optional.
          type: string
        conferenceProperties:
          $ref: '#/components/schemas/ConferenceProperties'
          description: Conferencing properties for this calendar, for example what
            types of conferences are allowed.
        defaultReminders:
          description: The default reminders that the authenticated user has for this
            calendar.
          items:
            $ref: '#/components/schemas/EventReminder'
          type: array
        deleted:
          default: false
          description: Whether this calendar list entry has been deleted from the
            calendar list. Read-only. Optional. The default is False.
          type: boolean
        description:
          description: Description of the calendar. Optional. Read-only.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        foregroundColor:
          description: The foreground color of the calendar in the hexadecimal format
            "#ffffff". This property supersedes the index-based colorId property.
            To set or change this property, you need to specify colorRgbFormat=true
            in the parameters of the insert, update and patch methods. Optional.
          type: string
        hidden:
          default: false
          description: Whether the calendar has been hidden from the list. Optional.
            The attribute is only returned when the calendar is hidden, in which case
            the value is true.
          type: boolean
        id:
          description: Identifier of the calendar.
          type: string
        kind:
          default: calendar#calendarListEntry
          description: Type of the resource ("calendar#calendarListEntry").
          type: string
        location:
          description: Geographic location of the calendar as free-form text. Optional.
            Read-only.
          type: string
        notificationSettings:
          description: The notifications that the authenticated user is receiving
            for this calendar.
          properties:
            notifications:
              description: The list of notifications set for this calendar.
              items:
                $ref: '#/components/schemas/CalendarNotification'
              type: array
          type: object
        primary:
          default: false
          description: Whether the calendar is the primary calendar of the authenticated
            user. Read-only. Optional. The default is False.
          type: boolean
        selected:
          default: false
          description: Whether the calendar content shows up in the calendar UI. Optional.
            The default is False.
          type: boolean
        summary:
          description: Title of the calendar. Read-only.
          type: string
        summaryOverride:
          description: The summary that the authenticated user has set for this calendar.
            Optional.
          type: string
        timeZone:
          description: The time zone of the calendar. Optional. Read-only.
          type: string
      type: object
    CalendarNotification:
      properties:
        method:
          description: "The method used to deliver the notification. The possible
            value is:  \n- \"email\" - Notifications are sent via email.  \nRequired
            when adding a notification."
          type: string
        type:
          description: "The type of notification. Possible values are:  \n- \"eventCreation\"\
            \ - Notification sent when a new event is put on the calendar. \n- \"\
            eventChange\" - Notification sent when an event is changed. \n- \"eventCancellation\"\
            \ - Notification sent when an event is cancelled. \n- \"eventResponse\"\
            \ - Notification sent when an attendee responds to the event invitation.
            \n- \"agenda\" - An agenda with the events of the day (sent out in the
            morning).  \nRequired when adding a notification."
          type: string
      type: object
    Channel:
      properties:
        address:
          description: The address where notifications are delivered for this channel.
          type: string
        expiration:
          description: Date and time of notification channel expiration, expressed
            as a Unix timestamp, in milliseconds. Optional.
          format: int64
          type: string
        id:
          description: A UUID or similar unique string that identifies this channel.
          type: string
        kind:
          default: api#channel
          description: Identifies this as a notification channel used to watch for
            changes to a resource, which is "api#channel".
          type: string
        params:
          additionalProperties:
            description: Declares a new parameter by name.
            type: string
          description: Additional parameters controlling delivery channel behavior.
            Optional.
          type: object
        payload:
          description: A Boolean value to indicate whether payload is wanted. Optional.
          type: boolean
        resourceId:
          description: An opaque ID that identifies the resource being watched on
            this channel. Stable across different API versions.
          type: string
        resourceUri:
          description: A version-specific identifier for the watched resource.
          type: string
        token:
          description: An arbitrary string delivered to the target address with each
            notification delivered over this channel. Optional.
          type: string
        type:
          description: The type of delivery mechanism used for this channel. Valid
            values are "web_hook" (or "webhook"). Both values refer to a channel where
            Http requests are used to deliver messages.
          type: string
      type: object
    ColorDefinition:
      properties:
        background:
          description: The background color associated with this color definition.
          type: string
        foreground:
          description: The foreground color that can be used to write on top of a
            background with 'background' color.
          type: string
      type: object
    Colors:
      properties:
        calendar:
          additionalProperties:
            $ref: '#/components/schemas/ColorDefinition'
            description: A calendar color definition.
          description: A global palette of calendar colors, mapping from the color
            ID to its definition. A calendarListEntry resource refers to one of these
            color IDs in its colorId field. Read-only.
          type: object
        event:
          additionalProperties:
            $ref: '#/components/schemas/ColorDefinition'
            description: An event color definition.
          description: A global palette of event colors, mapping from the color ID
            to its definition. An event resource may refer to one of these color IDs
            in its colorId field. Read-only.
          type: object
        kind:
          default: calendar#colors
          description: Type of the resource ("calendar#colors").
          type: string
        updated:
          description: Last modification time of the color palette (as a RFC3339 timestamp).
            Read-only.
          format: date-time
          type: string
      type: object
    ConferenceData:
      properties:
        conferenceId:
          description: "The ID of the conference.\nCan be used by developers to keep
            track of conferences, should not be displayed to users.\nThe ID value
            is formed differently for each conference solution type:  \n- eventHangout:
            ID is not set. (This conference type is deprecated.)\n- eventNamedHangout:
            ID is the name of the Hangout. (This conference type is deprecated.)\n
            - hangoutsMeet: ID is the 10-letter meeting code, for example aaa-bbbb-ccc.\n
            - addOn: ID is defined by the third-party provider.  Optional."
          type: string
        conferenceSolution:
          $ref: '#/components/schemas/ConferenceSolution'
          description: 'The conference solution, such as Google Meet.

            Unset for a conference with a failed create request.

            Either conferenceSolution and at least one entryPoint, or createRequest
            is required.'
        createRequest:
          $ref: '#/components/schemas/CreateConferenceRequest'
          description: 'A request to generate a new conference and attach it to the
            event. The data is generated asynchronously. To see whether the data is
            present check the status field.

            Either conferenceSolution and at least one entryPoint, or createRequest
            is required.'
        entryPoints:
          description: 'Information about individual conference entry points, such
            as URLs or phone numbers.

            All of them must belong to the same conference.

            Either conferenceSolution and at least one entryPoint, or createRequest
            is required.'
          items:
            $ref: '#/components/schemas/EntryPoint'
          type: array
        notes:
          description: Additional notes (such as instructions from the domain administrator,
            legal notices) to display to the user. Can contain HTML. The maximum length
            is 2048 characters. Optional.
          type: string
        parameters:
          $ref: '#/components/schemas/ConferenceParameters'
          description: Additional properties related to a conference. An example would
            be a solution-specific setting for enabling video streaming.
        signature:
          description: 'The signature of the conference data.

            Generated on server side.

            Unset for a conference with a failed create request.

            Optional for a conference with a pending create request.'
          type: string
      type: object
    ConferenceParameters:
      properties:
        addOnParameters:
          $ref: '#/components/schemas/ConferenceParametersAddOnParameters'
          description: Additional add-on specific data.
      type: object
    ConferenceParametersAddOnParameters:
      properties:
        parameters:
          additionalProperties:
            type: string
          type: object
      type: object
    ConferenceProperties:
      properties:
        allowedConferenceSolutionTypes:
          description: "The types of conference solutions that are supported for this
            calendar.\nThe possible values are:  \n- \"eventHangout\" \n- \"eventNamedHangout\"\
            \ \n- \"hangoutsMeet\"  Optional."
          items:
            type: string
          type: array
      type: object
    ConferenceRequestStatus:
      properties:
        statusCode:
          description: "The current status of the conference create request. Read-only.\n
            The possible values are:  \n- \"pending\": the conference create request
            is still being processed.\n- \"success\": the conference create request
            succeeded, the entry points are populated.\n- \"failure\": the conference
            create request failed, there are no entry points."
          type: string
      type: object
    ConferenceSolution:
      properties:
        iconUri:
          description: The user-visible icon for this solution.
          type: string
        key:
          $ref: '#/components/schemas/ConferenceSolutionKey'
          description: The key which can uniquely identify the conference solution
            for this event.
        name:
          description: The user-visible name of this solution. Not localized.
          type: string
      type: object
    ConferenceSolutionKey:
      properties:
        type:
          description: "The conference solution type.\nIf a client encounters an unfamiliar
            or empty type, it should still be able to display the entry points. However,
            it should disallow modifications.\nThe possible values are:  \n- \"eventHangout\"\
            \ for Hangouts for consumers (deprecated; existing events may show this
            conference solution type but new conferences cannot be created)\n- \"\
            eventNamedHangout\" for classic Hangouts for Google Workspace users (deprecated;
            existing events may show this conference solution type but new conferences
            cannot be created)\n- \"hangoutsMeet\" for Google Meet (http://meet.google.com)\n
            - \"addOn\" for 3P conference providers"
          type: string
      type: object
    CreateConferenceRequest:
      properties:
        conferenceSolutionKey:
          $ref: '#/components/schemas/ConferenceSolutionKey'
          description: The conference solution, such as Hangouts or Google Meet.
        requestId:
          description: 'The client-generated unique ID for this request.

            Clients should regenerate this ID for every new request. If an ID provided
            is the same as for the previous request, the request is ignored.'
          type: string
        status:
          $ref: '#/components/schemas/ConferenceRequestStatus'
          description: The status of the conference create request.
      type: object
    EntryPoint:
      properties:
        accessCode:
          description: 'The access code to access the conference. The maximum length
            is 128 characters.

            When creating new conference data, populate only the subset of {meetingCode,
            accessCode, passcode, password, pin} fields that match the terminology
            that the conference provider uses. Only the populated fields should be
            displayed.

            Optional.'
          type: string
        entryPointFeatures:
          description: Features of the entry point, such as being toll or toll-free.
            One entry point can have multiple features. However, toll and toll-free
            cannot be both set on the same entry point.
          items:
            type: string
          type: array
        entryPointType:
          description: "The type of the conference entry point.\nPossible values are:\
            \  \n- \"video\" - joining a conference over HTTP. A conference can have
            zero or one video entry point.\n- \"phone\" - joining a conference by
            dialing a phone number. A conference can have zero or more phone entry
            points.\n- \"sip\" - joining a conference over SIP. A conference can have
            zero or one sip entry point.\n- \"more\" - further conference joining
            instructions, for example additional phone numbers. A conference can have
            zero or one more entry point. A conference with only a more entry point
            is not a valid conference."
          type: string
        label:
          description: "The label for the URI. Visible to end users. Not localized.
            The maximum length is 512 characters.\nExamples:  \n- for video: meet.google.com/aaa-bbbb-ccc\n
            - for phone: +1 123 268 2601\n- for sip: 12345678@altostrat.com\n- for
            more: should not be filled  \nOptional."
          type: string
        meetingCode:
          description: 'The meeting code to access the conference. The maximum length
            is 128 characters.

            When creating new conference data, populate only the subset of {meetingCode,
            accessCode, passcode, password, pin} fields that match the terminology
            that the conference provider uses. Only the populated fields should be
            displayed.

            Optional.'
          type: string
        passcode:
          description: 'The passcode to access the conference. The maximum length
            is 128 characters.

            When creating new conference data, populate only the subset of {meetingCode,
            accessCode, passcode, password, pin} fields that match the terminology
            that the conference provider uses. Only the populated fields should be
            displayed.'
          type: string
        password:
          description: 'The password to access the conference. The maximum length
            is 128 characters.

            When creating new conference data, populate only the subset of {meetingCode,
            accessCode, passcode, password, pin} fields that match the terminology
            that the conference provider uses. Only the populated fields should be
            displayed.

            Optional.'
          type: string
        pin:
          description: 'The PIN to access the conference. The maximum length is 128
            characters.

            When creating new conference data, populate only the subset of {meetingCode,
            accessCode, passcode, password, pin} fields that match the terminology
            that the conference provider uses. Only the populated fields should be
            displayed.

            Optional.'
          type: string
        regionCode:
          description: 'The CLDR/ISO 3166 region code for the country associated with
            this phone access. Example: "SE" for Sweden.

            Calendar backend will populate this field only for EntryPointType.PHONE.'
          type: string
        uri:
          description: "The URI of the entry point. The maximum length is 1300 characters.\n\
            Format:  \n- for video, http: or https: schema is required.\n- for phone,
            tel: schema is required. The URI should include the entire dial sequence
            (e.g., tel:+12345678900,,,123456789;1234).\n- for sip, sip: schema is
            required, e.g., sip:12345678@myprovider.com.\n- for more, http: or https:
            schema is required."
          type: string
      type: object
    Error:
      properties:
        domain:
          description: Domain, or broad category, of the error.
          type: string
        reason:
          description: "Specific reason for the error. Some of the possible values
            are:  \n- \"groupTooBig\" - The group of users requested is too large
            for a single query. \n- \"tooManyCalendarsRequested\" - The number of
            calendars requested is too large for a single query. \n- \"notFound\"
            - The requested resource was not found. \n- \"internalError\" - The API
            service has encountered an internal error.  Additional error types may
            be added in the future, so clients should gracefully handle additional
            error statuses not included in this list."
          type: string
      type: object
    Event:
      properties:
        anyoneCanAddSelf:
          default: false
          description: Whether anyone can invite themselves to the event (deprecated).
            Optional. The default is False.
          type: boolean
        attachments:
          description: 'File attachments for the event.

            In order to modify attachments the supportsAttachments request parameter
            should be set to true.

            There can be at most 25 attachments per event,'
          items:
            $ref: '#/components/schemas/EventAttachment'
          type: array
        attendees:
          description: The attendees of the event. See the Events with attendees guide
            for more information on scheduling events with other calendar users. Service
            accounts need to use domain-wide delegation of authority to populate the
            attendee list.
          items:
            $ref: '#/components/schemas/EventAttendee'
          type: array
        attendeesOmitted:
          default: false
          description: Whether attendees may have been omitted from the event's representation.
            When retrieving an event, this may be due to a restriction specified by
            the maxAttendee query parameter. When updating an event, this can be used
            to only update the participant's response. Optional. The default is False.
          type: boolean
        colorId:
          description: The color of the event. This is an ID referring to an entry
            in the event section of the colors definition (see the  colors endpoint).
            Optional.
          type: string
        conferenceData:
          $ref: '#/components/schemas/ConferenceData'
          description: The conference-related information, such as details of a Google
            Meet conference. To create new conference details use the createRequest
            field. To persist your changes, remember to set the conferenceDataVersion
            request parameter to 1 for all event modification requests.
        created:
          description: Creation time of the event (as a RFC3339 timestamp). Read-only.
          format: date-time
          type: string
        creator:
          description: The creator of the event. Read-only.
          properties:
            displayName:
              description: The creator's name, if available.
              type: string
            email:
              description: The creator's email address, if available.
              type: string
            id:
              description: The creator's Profile ID, if available.
              type: string
            self:
              default: false
              description: Whether the creator corresponds to the calendar on which
                this copy of the event appears. Read-only. The default is False.
              type: boolean
          type: object
        description:
          description: Description of the event. Can contain HTML. Optional.
          type: string
        end:
          $ref: '#/components/schemas/EventDateTime'
          description: The (exclusive) end time of the event. For a recurring event,
            this is the end time of the first instance.
        endTimeUnspecified:
          default: false
          description: Whether the end time is actually unspecified. An end time is
            still provided for compatibility reasons, even if this attribute is set
            to True. The default is False.
          type: boolean
        etag:
          description: ETag of the resource.
          type: string
        eventType:
          default: default
          description: "Specific type of the event. Read-only. Possible values are:\
            \  \n- \"default\" - A regular event or not further specified. \n- \"\
            outOfOffice\" - An out-of-office event. \n- \"focusTime\" - A focus-time
            event. \n- \"workingLocation\" - A working location event. Developer Preview."
          type: string
        extendedProperties:
          description: Extended properties of the event.
          properties:
            private:
              additionalProperties:
                description: The name of the private property and the corresponding
                  value.
                type: string
              description: Properties that are private to the copy of the event that
                appears on this calendar.
              type: object
            shared:
              additionalProperties:
                description: The name of the shared property and the corresponding
                  value.
                type: string
              description: Properties that are shared between copies of the event
                on other attendees' calendars.
              type: object
          type: object
        gadget:
          description: A gadget that extends this event. Gadgets are deprecated; this
            structure is instead only used for returning birthday calendar metadata.
          properties:
            display:
              description: "The gadget's display mode. Deprecated. Possible values
                are:  \n- \"icon\" - The gadget displays next to the event's title
                in the calendar view. \n- \"chip\" - The gadget displays when the
                event is clicked."
              type: string
            height:
              description: The gadget's height in pixels. The height must be an integer
                greater than 0. Optional. Deprecated.
              format: int32
              type: integer
            iconLink:
              description: The gadget's icon URL. The URL scheme must be HTTPS. Deprecated.
              type: string
            link:
              description: The gadget's URL. The URL scheme must be HTTPS. Deprecated.
              type: string
            preferences:
              additionalProperties:
                description: The preference name and corresponding value.
                type: string
              description: Preferences.
              type: object
            title:
              description: The gadget's title. Deprecated.
              type: string
            type:
              description: The gadget's type. Deprecated.
              type: string
            width:
              description: The gadget's width in pixels. The width must be an integer
                greater than 0. Optional. Deprecated.
              format: int32
              type: integer
          type: object
        guestsCanInviteOthers:
          default: true
          description: Whether attendees other than the organizer can invite others
            to the event. Optional. The default is True.
          type: boolean
        guestsCanModify:
          default: false
          description: Whether attendees other than the organizer can modify the event.
            Optional. The default is False.
          type: boolean
        guestsCanSeeOtherGuests:
          default: true
          description: Whether attendees other than the organizer can see who the
            event's attendees are. Optional. The default is True.
          type: boolean
        hangoutLink:
          description: An absolute link to the Google Hangout associated with this
            event. Read-only.
          type: string
        htmlLink:
          description: An absolute link to this event in the Google Calendar Web UI.
            Read-only.
          type: string
        iCalUID:
          description: 'Event unique identifier as defined in RFC5545. It is used
            to uniquely identify events accross calendaring systems and must be supplied
            when importing events via the import method.

            Note that the iCalUID and the id are not identical and only one of them
            should be supplied at event creation time. One difference in their semantics
            is that in recurring events, all occurrences of one event have different
            ids while they all share the same iCalUIDs. To retrieve an event using
            its iCalUID, call the events.list method using the iCalUID parameter.
            To retrieve an event using its id, call the events.get method.'
          type: string
        id:
          description: "Opaque identifier of the event. When creating new single or
            recurring events, you can specify their IDs. Provided IDs must follow
            these rules:  \n- characters allowed in the ID are those used in base32hex
            encoding, i.e. lowercase letters a-v and digits 0-9, see section 3.1.2
            in RFC2938 \n- the length of the ID must be between 5 and 1024 characters
            \n- the ID must be unique per calendar  Due to the globally distributed
            nature of the system, we cannot guarantee that ID collisions will be detected
            at event creation time. To minimize the risk of collisions we recommend
            using an established UUID algorithm such as one described in RFC4122.\n
            If you do not specify an ID, it will be automatically generated by the
            server.\nNote that the icalUID and the id are not identical and only one
            of them should be supplied at event creation time. One difference in their
            semantics is that in recurring events, all occurrences of one event have
            different ids while they all share the same icalUIDs."
          type: string
        kind:
          default: calendar#event
          description: Type of the resource ("calendar#event").
          type: string
        location:
          description: Geographic location of the event as free-form text. Optional.
          type: string
        locked:
          default: false
          description: Whether this is a locked event copy where no changes can be
            made to the main event fields "summary", "description", "location", "start",
            "end" or "recurrence". The default is False. Read-Only.
          type: boolean
        organizer:
          description: The organizer of the event. If the organizer is also an attendee,
            this is indicated with a separate entry in attendees with the organizer
            field set to True. To change the organizer, use the move operation. Read-only,
            except when importing an event.
          properties:
            displayName:
              description: The organizer's name, if available.
              type: string
            email:
              description: The organizer's email address, if available. It must be
                a valid email address as per RFC5322.
              type: string
            id:
              description: The organizer's Profile ID, if available.
              type: string
            self:
              default: false
              description: Whether the organizer corresponds to the calendar on which
                this copy of the event appears. Read-only. The default is False.
              type: boolean
          type: object
        originalStartTime:
          $ref: '#/components/schemas/EventDateTime'
          description: For an instance of a recurring event, this is the time at which
            this event would start according to the recurrence data in the recurring
            event identified by recurringEventId. It uniquely identifies the instance
            within the recurring event series even if the instance was moved to a
            different time. Immutable.
        privateCopy:
          default: false
          description: If set to True, Event propagation is disabled. Note that it
            is not the same thing as Private event properties. Optional. Immutable.
            The default is False.
          type: boolean
        recurrence:
          description: List of RRULE, EXRULE, RDATE and EXDATE lines for a recurring
            event, as specified in RFC5545. Note that DTSTART and DTEND lines are
            not allowed in this field; event start and end times are specified in
            the start and end fields. This field is omitted for single events or instances
            of recurring events.
          items:
            type: string
          type: array
        recurringEventId:
          description: For an instance of a recurring event, this is the id of the
            recurring event to which this instance belongs. Immutable.
          type: string
        reminders:
          description: Information about the event's reminders for the authenticated
            user.
          properties:
            overrides:
              description: If the event doesn't use the default reminders, this lists
                the reminders specific to the event, or, if not set, indicates that
                no reminders are set for this event. The maximum number of override
                reminders is 5.
              items:
                $ref: '#/components/schemas/EventReminder'
              type: array
            useDefault:
              description: Whether the default reminders of the calendar apply to
                the event.
              type: boolean
          type: object
        sequence:
          description: Sequence number as per iCalendar.
          format: int32
          type: integer
        source:
          description: Source from which the event was created. For example, a web
            page, an email message or any document identifiable by an URL with HTTP
            or HTTPS scheme. Can only be seen or modified by the creator of the event.
          properties:
            title:
              description: Title of the source; for example a title of a web page
                or an email subject.
              type: string
            url:
              description: URL of the source pointing to a resource. The URL scheme
                must be HTTP or HTTPS.
              type: string
          type: object
        start:
          $ref: '#/components/schemas/EventDateTime'
          description: The (inclusive) start time of the event. For a recurring event,
            this is the start time of the first instance.
        status:
          description: "Status of the event. Optional. Possible values are:  \n- \"\
            confirmed\" - The event is confirmed. This is the default status. \n-
            \"tentative\" - The event is tentatively confirmed. \n- \"cancelled\"
            - The event is cancelled (deleted). The list method returns cancelled
            events only on incremental sync (when syncToken or updatedMin are specified)
            or if the showDeleted flag is set to true. The get method always returns
            them.\nA cancelled status represents two different states depending on
            the event type:  \n- Cancelled exceptions of an uncancelled recurring
            event indicate that this instance should no longer be presented to the
            user. Clients should store these events for the lifetime of the parent
            recurring event.\nCancelled exceptions are only guaranteed to have values
            for the id, recurringEventId and originalStartTime fields populated. The
            other fields might be empty.  \n- All other cancelled events represent
            deleted events. Clients should remove their locally synced copies. Such
            cancelled events will eventually disappear, so do not rely on them being
            available indefinitely.\nDeleted events are only guaranteed to have the
            id field populated.   On the organizer's calendar, cancelled events continue
            to expose event details (summary, location, etc.) so that they can be
            restored (undeleted). Similarly, the events to which the user was invited
            and that they manually removed continue to provide details. However, incremental
            sync requests with showDeleted set to false will not return these details.\n
            If an event changes its organizer (for example via the move operation)
            and the original organizer is not on the attendee list, it will leave
            behind a cancelled event where only the id field is guaranteed to be populated."
          type: string
        summary:
          description: Title of the event.
          type: string
        transparency:
          default: opaque
          description: "Whether the event blocks time on the calendar. Optional. Possible
            values are:  \n- \"opaque\" - Default value. The event does block time
            on the calendar. This is equivalent to setting Show me as to Busy in the
            Calendar UI. \n- \"transparent\" - The event does not block time on the
            calendar. This is equivalent to setting Show me as to Available in the
            Calendar UI."
          type: string
        updated:
          description: Last modification time of the event (as a RFC3339 timestamp).
            Read-only.
          format: date-time
          type: string
        visibility:
          default: default
          description: "Visibility of the event. Optional. Possible values are:  \n
            - \"default\" - Uses the default visibility for events on the calendar.
            This is the default value. \n- \"public\" - The event is public and event
            details are visible to all readers of the calendar. \n- \"private\" -
            The event is private and only event attendees may view event details.
            \n- \"confidential\" - The event is private. This value is provided for
            compatibility reasons."
          type: string
        workingLocationProperties:
          $ref: '#/components/schemas/EventWorkingLocationProperties'
          description: 'Developer Preview: Working Location event data. Read-only.'
      type: object
    EventAttachment:
      properties:
        fileId:
          description: 'ID of the attached file. Read-only.

            For Google Drive files, this is the ID of the corresponding Files resource
            entry in the Drive API.'
          type: string
        fileUrl:
          description: 'URL link to the attachment.

            For adding Google Drive file attachments use the same format as in alternateLink
            property of the Files resource in the Drive API.

            Required when adding an attachment.'
          type: string
        iconLink:
          description: URL link to the attachment's icon. This field can only be modified
            for custom third-party attachments.
          type: string
        mimeType:
          description: Internet media type (MIME type) of the attachment.
          type: string
        title:
          description: Attachment title.
          type: string
      type: object
    EventAttendee:
      properties:
        additionalGuests:
          default: 0
          description: Number of additional guests. Optional. The default is 0.
          format: int32
          type: integer
        comment:
          description: The attendee's response comment. Optional.
          type: string
        displayName:
          description: The attendee's name, if available. Optional.
          type: string
        email:
          description: 'The attendee''s email address, if available. This field must
            be present when adding an attendee. It must be a valid email address as
            per RFC5322.

            Required when adding an attendee.'
          type: string
        id:
          description: The attendee's Profile ID, if available.
          type: string
        optional:
          default: false
          description: Whether this is an optional attendee. Optional. The default
            is False.
          type: boolean
        organizer:
          description: Whether the attendee is the organizer of the event. Read-only.
            The default is False.
          type: boolean
        resource:
          default: false
          description: Whether the attendee is a resource. Can only be set when the
            attendee is added to the event for the first time. Subsequent modifications
            are ignored. Optional. The default is False.
          type: boolean
        responseStatus:
          description: "The attendee's response status. Possible values are:  \n-
            \"needsAction\" - The attendee has not responded to the invitation (recommended
            for new events). \n- \"declined\" - The attendee has declined the invitation.
            \n- \"tentative\" - The attendee has tentatively accepted the invitation.
            \n- \"accepted\" - The attendee has accepted the invitation.  Warning:
            If you add an event using the values declined, tentative, or accepted,
            attendees with the \"Add invitations to my calendar\" setting set to \"\
            When I respond to invitation in email\" won't see an event on their calendar
            unless they choose to change their invitation response in the event invitation
            email."
          type: string
        self:
          default: false
          description: Whether this entry represents the calendar on which this copy
            of the event appears. Read-only. The default is False.
          type: boolean
      type: object
    EventDateTime:
      properties:
        date:
          description: The date, in the format "yyyy-mm-dd", if this is an all-day
            event.
          format: date
          type: string
        dateTime:
          description: The time, as a combined date-time value (formatted according
            to RFC3339). A time zone offset is required unless a time zone is explicitly
            specified in timeZone.
          format: date-time
          type: string
        timeZone:
          description: The time zone in which the time is specified. (Formatted as
            an IANA Time Zone Database name, e.g. "Europe/Zurich".) For recurring
            events this field is required and specifies the time zone in which the
            recurrence is expanded. For single events this field is optional and indicates
            a custom time zone for the event start/end.
          type: string
      type: object
    EventReminder:
      properties:
        method:
          description: "The method used by this reminder. Possible values are:  \n
            - \"email\" - Reminders are sent via email. \n- \"popup\" - Reminders
            are sent via a UI popup.  \nRequired when adding a reminder."
          type: string
        minutes:
          description: 'Number of minutes before the start of the event when the reminder
            should trigger. Valid values are between 0 and 40320 (4 weeks in minutes).

            Required when adding a reminder.'
          format: int32
          type: integer
      type: object
    EventWorkingLocationProperties:
      properties:
        customLocation:
          description: If present, specifies that the user is working from a custom
            location.
          properties:
            label:
              description: An optional extra label for additional information.
              type: string
          type: object
        homeOffice:
          description: If present, specifies that the user is working at home.
        officeLocation:
          description: If present, specifies that the user is working from an office.
          properties:
            buildingId:
              description: An optional building identifier. This should reference
                a building ID in the organization's Resources database.
              type: string
            deskId:
              description: An optional arbitrary desk identifier.
              type: string
            floorId:
              description: An optional arbitrary floor identifier.
              type: string
            floorSectionId:
              description: An optional arbitrary floor section identifier.
              type: string
            label:
              description: An optional extra label for additional information.
              type: string
          type: object
      type: object
    Events:
      properties:
        accessRole:
          description: "The user's access role for this calendar. Read-only. Possible
            values are:  \n- \"none\" - The user has no access. \n- \"freeBusyReader\"\
            \ - The user has read access to free/busy information. \n- \"reader\"
            - The user has read access to the calendar. Private events will appear
            to users with reader access, but event details will be hidden. \n- \"\
            writer\" - The user has read and write access to the calendar. Private
            events will appear to users with writer access, and event details will
            be visible. \n- \"owner\" - The user has ownership of the calendar. This
            role has all of the permissions of the writer role with the additional
            ability to see and manipulate ACLs."
          type: string
        defaultReminders:
          description: The default reminders on the calendar for the authenticated
            user. These reminders apply to all events on this calendar that do not
            explicitly override them (i.e. do not have reminders.useDefault set to
            True).
          items:
            $ref: '#/components/schemas/EventReminder'
          type: array
        description:
          description: Description of the calendar. Read-only.
          type: string
        etag:
          description: ETag of the collection.
          type: string
        items:
          description: List of events on the calendar.
          items:
            $ref: '#/components/schemas/Event'
          type: array
        kind:
          default: calendar#events
          description: Type of the collection ("calendar#events").
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. Omitted
            if no further results are available, in which case nextSyncToken is provided.
          type: string
        nextSyncToken:
          description: Token used at a later point in time to retrieve only the entries
            that have changed since this result was returned. Omitted if further results
            are available, in which case nextPageToken is provided.
          type: string
        summary:
          description: Title of the calendar. Read-only.
          type: string
        timeZone:
          description: The time zone of the calendar. Read-only.
          type: string
        updated:
          description: Last modification time of the calendar (as a RFC3339 timestamp).
            Read-only.
          format: date-time
          type: string
      type: object
    FreeBusyCalendar:
      properties:
        busy:
          description: List of time ranges during which this calendar should be regarded
            as busy.
          items:
            $ref: '#/components/schemas/TimePeriod'
          type: array
        errors:
          description: Optional error(s) (if computation for the calendar failed).
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    FreeBusyGroup:
      properties:
        calendars:
          description: List of calendars' identifiers within a group.
          items:
            type: string
          type: array
        errors:
          description: Optional error(s) (if computation for the group failed).
          items:
            $ref: '#/components/schemas/Error'
          type: array
      type: object
    FreeBusyRequest:
      properties:
        calendarExpansionMax:
          description: Maximal number of calendars for which FreeBusy information
            is to be provided. Optional. Maximum value is 50.
          format: int32
          type: integer
        groupExpansionMax:
          description: Maximal number of calendar identifiers to be provided for a
            single group. Optional. An error is returned for a group with more members
            than this value. Maximum value is 100.
          format: int32
          type: integer
        items:
          description: List of calendars and/or groups to query.
          items:
            $ref: '#/components/schemas/FreeBusyRequestItem'
          type: array
        timeMax:
          description: The end of the interval for the query formatted as per RFC3339.
          format: date-time
          type: string
        timeMin:
          description: The start of the interval for the query formatted as per RFC3339.
          format: date-time
          type: string
        timeZone:
          default: UTC
          description: Time zone used in the response. Optional. The default is UTC.
          type: string
      type: object
    FreeBusyRequestItem:
      properties:
        id:
          description: The identifier of a calendar or a group.
          type: string
      type: object
    FreeBusyResponse:
      properties:
        calendars:
          additionalProperties:
            $ref: '#/components/schemas/FreeBusyCalendar'
            description: Free/busy expansions for a single calendar.
          description: List of free/busy information for calendars.
          type: object
        groups:
          additionalProperties:
            $ref: '#/components/schemas/FreeBusyGroup'
            description: List of calendars that are members of this group.
          description: Expansion of groups.
          type: object
        kind:
          default: calendar#freeBusy
          description: Type of the resource ("calendar#freeBusy").
          type: string
        timeMax:
          description: The end of the interval.
          format: date-time
          type: string
        timeMin:
          description: The start of the interval.
          format: date-time
          type: string
      type: object
    Setting:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: The id of the user setting.
          type: string
        kind:
          default: calendar#setting
          description: Type of the resource ("calendar#setting").
          type: string
        value:
          description: Value of the user setting. The format of the value depends
            on the ID of the setting. It must always be a UTF-8 string of length up
            to 1024 characters.
          type: string
      type: object
    Settings:
      properties:
        etag:
          description: Etag of the collection.
          type: string
        items:
          description: List of user settings.
          items:
            $ref: '#/components/schemas/Setting'
          type: array
        kind:
          default: calendar#settings
          description: Type of the collection ("calendar#settings").
          type: string
        nextPageToken:
          description: Token used to access the next page of this result. Omitted
            if no further results are available, in which case nextSyncToken is provided.
          type: string
        nextSyncToken:
          description: Token used at a later point in time to retrieve only the entries
            that have changed since this result was returned. Omitted if further results
            are available, in which case nextPageToken is provided.
          type: string
      type: object
    TimePeriod:
      properties:
        end:
          description: The (exclusive) end of the time period.
          format: date-time
          type: string
        start:
          description: The (inclusive) start of the time period.
          format: date-time
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/calendar: See, edit, share, and permanently
              delete all the calendars you can access using Google Calendar
            https://www.googleapis.com/auth/calendar.events: View and edit events
              on all your calendars
            https://www.googleapis.com/auth/calendar.events.readonly: View events
              on all your calendars
            https://www.googleapis.com/auth/calendar.readonly: See and download any
              calendar you can access using your Google Calendar
            https://www.googleapis.com/auth/calendar.settings.readonly: View your
              Calendar settings
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/calendar: See, edit, share, and permanently
              delete all the calendars you can access using Google Calendar
            https://www.googleapis.com/auth/calendar.events: View and edit events
              on all your calendars
            https://www.googleapis.com/auth/calendar.events.readonly: View events
              on all your calendars
            https://www.googleapis.com/auth/calendar.readonly: See and download any
              calendar you can access using your Google Calendar
            https://www.googleapis.com/auth/calendar.settings.readonly: View your
              Calendar settings
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
